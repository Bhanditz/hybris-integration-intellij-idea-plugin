<!--
  ~ This file is part of "hybris integration" plugin for Intellij IDEA.
  ~ Copyright (C) 2014-2016 Alexander Bartash <AlexanderBartash@gmail.com>
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this program. If not, see <http://www.gnu.org/licenses/>.
  -->

<idea-plugin version="2">

    <id>ccom.intellij.idea.plugin.hybris.impex</id>
    <name>hybris integration</name>
    <version>5.0</version>

    <depends>com.intellij.modules.lang</depends>

    <depends optional="true" config-file="impex-dependencies.xml">com.intellij.modules.lang</depends>
    <depends optional="true" config-file="spring-optional-dependencies.xml">com.intellij.spring</depends>
    <depends optional="true" config-file="web-optional-dependencies.xml">com.intellij.javaee</depends>
    <depends optional="true" config-file="project-import-optional-dependencies.xml">com.intellij.modules.java</depends>
    <depends optional="true" config-file="business-process-optional-dependencies.xml">com.intellij.diagram</depends>

    <resource-bundle>i18n.HybrisBundle</resource-bundle>

    <vendor email="AlexanderBartash@gmail.com" url="https://bitbucket.org/AlexanderBartash/hybris-integration-intellij-idea-plugin/wiki/Home">Alexander Bartash</vendor>

    <description>
        <![CDATA[
          This plugin is an open source (LGPL) and <b>official</b> plugin for hybris platform supported by community and hybris.

          <br/>
          If you have any questions you can send an email to me:
          <br/>
          Alexander Bartash: AlexanderBartash@gmail.com
          <br/>
          or
          <br/>
          Martin Zdarsky-Jones: martin.zdarsky@hybris.com

          <br/>
          <br/>
          <b>Import of hybris extensions to Intellij IDEA:</b>
          <br/>
          - Automatic modules dependency management.
          <br/>
          - Automatic classpath configuration.
          <br/>
          - Proper project configuration to make it compatible with JRebel.
          <br/>
          - Automatic Spring facet configuration (only Ultimate IDEA).
          <br/>
          - Automatic Web facet configuration (only Ultimate IDEA).

          <br/>
          <br/>
          <b>Visualization of business process graph (use context menu of the file "Diagrams/Show Diagram"). (only Ultimate IDEA)</b>

          <br/>
          <br/>
          <b>Enhanced project view tree:</b>
          <br/>
          - Rarely used elements are grouped into "junk" virtual folder also you can include to or exclude specific folder from the "Junk" list.
          <br/>
          - Compacting of empty middle folders in the project tree like it is done for java packages.

          <br/>
          <br/>
          <b>Editor for impex files:</b>

          <br/>
          - Syntax highlighting and errors indication for hybris impex files.
          <br/>
          - Selected column name highlighting.
          <br/>
          - Automatic alignment into columns via "Reformat code".
          <br/>
          - Code folding to improve readability.
          <br/>
          - Autocompletion within the header for modifier name and value. *
          <br/>
          - Autocompletion for hybris types based on the current IntelliJ-Project (hybris coretypes + your custom types). *
          <br/>
          - Autocompletion for hybris attributes based on the current IntelliJ-Project (hybris coretypes + your custom types). *

          <br/>
          <br/>
          * Due autocompletion based on the IntelliJ-Class-Index this feature is only available after the IntelliJ-indexing
          process is finished. The indexing is automatically run on the first completion-action. After an *-item.xml change or
          adding a new hybris-extension - and ant install - you can rerun the "indexing" mechanism with "Tools/Index [y]-types".


          <br/>
          <br/>
          <b>Guides:</b>
          <br/>
          - <a href="https://www.youtube.com/watch?v=_wVbowe39GM">How to import hybris project using Intellij IDEA "hybris integration" plugin</a>
          <br/>
          - <a href="https://www.youtube.com/watch?v=I-YYKD0OSyY">How to use HotSwap in hybris with Oracle JDK and DCEVM OpenJDK</a>
          <br/>
          Visit <a href="https://bitbucket.org/AlexanderBartash/hybris-integration-intellij-idea-plugin">our page</a> in BitBucket for more details.

          <br/>
          <br/>
          <b>Contribution guidelines:</b>
          <br/>
          - <a href="https://bitbucket.org/AlexanderBartash/impex-editor-intellij-idea-plugin/wiki/How%20To%20Configure%20Project%20Environment">How To Configure Project Environment</a>
          <br/>
          - Available tasks <a href="https://hybris-integration.atlassian.net/projects/IIP/issues">here</a> also you can suggest new features.
          <br/>
          - Also you can find useful information in our <a href="https://bitbucket.org/AlexanderBartash/hybris-integration-intellij-idea-plugin/wiki/Home">wiki</a>.
          <br/>
          - For additional questions feel free to send me an email.

          <br/>
          <br/>
          <b>Developers:</b>
          <br/>
          - Alexander Bartash
          <br/>
          - Vlad Bozhenok
          <br/>
          - Martin Zdarsky
          <br/>
          - Michael Golubev
          <br/>
          - Markus Priegl
          <br/>
          - Sergei Aksenenko
      ]]>
    </description>

    <change-notes>
        <![CDATA[
          4.3.3:
          <br/> - Project import has been fixed to provide correct project configuration to support JRebel. This release is only for Intellij IDEA 141.*. After this release we discontinue updates for 141.*. If you want to receive further updates please consider updating your IDE to the latest version.
          <br/>
          <br/>
          4.3.2:
          <br/> - Backward compatibility fixes.
          <br/>
          <br/>
          4.3.1:
          <br/> - Impex header type attribute name auto completion has been fixed. Previously it had been suggesting wrong values.
          <br/>
          <br/>
          4.3:
          <br/> - An ability to import hybris distribution without config folder.
          <br/> - Automatic hybris API JavaDoc configuration.
          <br/>
          <br/>
          4.2.2:
          <br/> - Bug fixes for Windows.
          <br/>
          <br/>
          4.2.1:
          <br/> - An error in setting deployment descriptor path in automatic Web facet configuration has been fixed.
          <br/>
          <br/>
          4.2:
          <br/> - Project view tree has been modified to hide unnecessary elements in "External Libraries" node.
          <br/> - Functionality of the project view tree has been extended to allow hiding of empty middle folders like it is done for java packages.
          <br/> - Project content roots configuration has been improved to exclude compiled classes in WEB-INF folder of a web application when they are not required by the classpath.
          <br/> - Automatic Web facet configuration has been implemented.
          <br/>
          <br/>
          4.1:
          <br/> - Business process visualisation has been improved to support new features from the latest hybris versions.
          <br/>
          <br/>
          4.0.1:
          <br/> - Error handling has been improved in visualization of business processes.
          <br/>
          <br/>
          4.0:
          <br/> - Visualization of business processes has been implemented.
          <br/>
          <br/>
          3.1.2:
          <br/> - Impex lexer has been fixed to avoid showing syntax errors for one-character attribute names.
          <br/> - IntelliJ IDEA 13.1 has been removed from supported versions due to major changes in API. Now IntelliJ IDEA 14.1 is the oldest supported versions.
          <br/> - Backward compatibility has been improved for early versions of IntelliJ IDEA 14.1.
          <br/> - Minor improvements have been made in project import.
          <br/>
          <br/>
          3.1.1:
          <br/> - Bug fixes for Windows.
          <br/>
          <br/>
          3.1:
          <br/> - Automatic Spring facet configuration has been improved. Project import dialog has been redesigned to provide new configuration, validation. New import mode has been implemented to import OOTB hybris extensions in read-only mode like a library.
          <br/>
          <br/>
          3.0:
          <br/> - Automatic Spring facet configuration has been implemented. Classpath configuration has been improved. Plugin setting dialog has been redesigned and ability to configure "Junk" folders has been added to it.
          <br/>
          <br/>
          2.2:
          <br/> - Ability to specify a directory where all "*.iml" module files will be stored has been implemented.
          <br/>
          <br/>
          2.1:
          <br/> - Enhanced project view tree. Rarely used elements have been grouped into "junk" virtual folder.
          <br/>
          <br/>
          2.0:
          <br/> - Import of hybris extensions to Intellij IDEA with automatic module dependency management and classpath configuration.
          <br/>
          <br/>
          1.8:
          <br/> - Plugin has been ported to WebStorm and other IDEA based IDEs. Various bugfixes in the impex lexer and parser has been made to improve stability.
          <br/>
          <br/>
          1.7.4.1:
          <br/> - Header name highlighting for JDK 1.7 has been fixed.
          <br/>
          <br/>
          1.7.4:
          <br/> - New smart code folding strategy has been implemented. Plugin settings with ability to disable code folding has been added to the IDEA setting dialog.
          <br/>
          <br/>
          1.7.3:
          <br/> - Stability of header name highlighting has been improved.
          <br/>
          <br/>
          1.7.2.1:
          <br/> - Compatibility with Idea 14 fixed.
          <br/>
          <br/>
          1.7.2:
          <br/> - Header name highlighting has been fixed.
          <br/>
          <br/>
          1.7.1:
          <br/> - Backward compatibility with Idea 13 fixed.
          <br/>
          <br/>
          1.7:
          <br/> - Selected column name highlighting.
          <br/>
          <br/>
          1.6:
          <br/> - Syntax validation and errors highlighting.
          <br/>
          <br/>
          1.5:
          <br/> - Square and round brackets folding support.
          <br/>
          <br/>
          1.4:
          <br/> - Implemented automatic alignment into columns via "Reformat code" feature.
          <br/>
          <br/>
          1.3.3:
          <br/> - Fixes for reported syntax highlighting bugs.
          <br/>
          <br/>
          1.3.2:
          <br/> - Various lexer improvements. Macros syntax highlighting fixed.
          <br/>
          <br/>
          1.3.1:
          <br/> - Added autocompletion for hybris type system based on ItemModel-inheritance. (Thanks to Markus Priegl)
          <br/>
          <br/>
          1.3:
          <br/> - Added simple code completion within the header for modifier name and value. (Thanks to Markus Priegl)
          <br/>
          <br/>
          1.2.2:
          <br/> - Header related modifier value detection rules have been fixed.
          <br/>
          <br/>
          1.2.1:
          <br/> - Character '-' added to allowed chars for an attribute name.
          <br/> - Ignore case option has been enabled at jFlex.
          <br/> - Colours has been fixed a bit.
          <br/>
          <br/>
          1.2:
          <br/> - Lexical analyzer has been improved a lot.
          <br/> - Correct colours configuration implemented for the Default and Darcula color schemes.
          <br/> - The plugin was rebuilt for JDK 1.6 as idea requires 1.6+.
          <br/>
          <br/>
          1.1.1:
          <br/>- The plugin was rebuilt for JDK 1.5.
          <br/>
          <br/>
          1.1:
          <br/>- The plugin was rebuilt for JDK 1.6_45.
      ]]>
    </change-notes>

    <!-- http://www.jetbrains.org/intellij/sdk/docs/basics/getting_started/build_number_ranges.html -->
    <idea-version since-build="143"/>

    <extensions defaultExtensionNs="com.intellij">

        <treeStructureProvider implementation="com.intellij.idea.plugin.hybris.view.HybrisProjectView"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.settings.HybrisProjectSettingsComponent"
                        serviceImplementation="com.intellij.idea.plugin.hybris.settings.HybrisProjectSettingsComponent"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.indexer.ItemTypesIndexService"
                        serviceImplementation="com.intellij.idea.plugin.hybris.indexer.impl.DefaultItemTypesIndexService"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.settings.HybrisApplicationSettingsComponent"
                            serviceImplementation="com.intellij.idea.plugin.hybris.settings.HybrisApplicationSettingsComponent"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.common.services.CommonIdeaService"
                            serviceImplementation="com.intellij.idea.plugin.hybris.common.services.impl.DefaultCommonIdeaService"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.common.services.VirtualFileSystemService"
                            serviceImplementation="com.intellij.idea.plugin.hybris.common.services.impl.DefaultVirtualFileSystemService"/>

    </extensions>
    
    <application-components>
        <component>
            <implementation-class>
                com.intellij.idea.plugin.hybris.type.system.validation.TypeSystemValidationComponent
            </implementation-class>
        </component>
    </application-components>

    <actions>
        <!--
        <action id="GenerateDomModel"
                class="com.intellij.idea.plugin.hybris.type.system.file.dom.generator.GenerateDomModelAction"
                text="Generate DOM Model...">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </action>
        -->
    </actions>

</idea-plugin>

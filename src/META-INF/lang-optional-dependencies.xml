<!--
  ~ This file is part of "hybris integration" plugin for Intellij IDEA.
  ~ Copyright (C) 2014-2016 Alexander Bartash <AlexanderBartash@gmail.com>
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this program. If not, see <http://www.gnu.org/licenses/>.
  -->

<idea-plugin version="2">

    <extensions defaultExtensionNs="com.intellij">
        <!-- ####################################################################################################### -->
        <!--                                            Hybris Type System                                           -->
        <!-- ####################################################################################################### -->

        <dom.fileDescription implementation="com.intellij.idea.plugin.hybris.type.system.file.TypeSystemDomFileDescription"/>

        <annotator language="XML" implementationClass="com.intellij.idea.plugin.hybris.type.system.editor.TypeSystemGutterAnnotator"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.type.system.meta.TSMetaModelAccess"
                        serviceImplementation="com.intellij.idea.plugin.hybris.type.system.meta.impl.TSMetaModelAccessImpl"/>

        <localInspection language="XML"
                         groupPath="hybris"
                         groupName="[y] hybris Type System"
                         level="ERROR"
                         enabledByDefault="true"
                         shortName="TSVBased"
                         bundle="i18n.HybrisBundle"
                         key="hybris.inspection.tsv.key"
                         implementationClass="com.intellij.idea.plugin.hybris.type.system.inspections.XmlRuleInspection"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.type.system.inspections.XPathService"
                            serviceImplementation="com.intellij.idea.plugin.hybris.type.system.inspections.DefaultXPathService"/>

        <!-- ####################################################################################################### -->
        <!--                                                   Impex                                                 -->
        <!-- ####################################################################################################### -->

        <!-- Core elements -->
        <fileTypeFactory implementation="com.intellij.idea.plugin.hybris.impex.file.ImpexFileTypeFactory"/>

        <lang.parserDefinition language="Impex"
                               implementationClass="com.intellij.idea.plugin.hybris.impex.ImpexParserDefinition"/>

        <lang.syntaxHighlighterFactory key="Impex"
                                       implementationClass="com.intellij.idea.plugin.hybris.impex.highlighting.ImpexSyntaxHighlighterFactory"/>

        <colorSettingsPage implementation="com.intellij.idea.plugin.hybris.impex.highlighting.ImpexColorSettingsPage"/>

        <additionalTextAttributes scheme="Default" file="colorSchemes/ImpexDefault.xml"/>
        <additionalTextAttributes scheme="Darcula" file="colorSchemes/ImpexDarcula.xml"/>

        <lang.commenter language="Impex"
                        implementationClass="com.intellij.idea.plugin.hybris.impex.commenter.ImpexCommenter"/>

        <lang.formatter language="Impex"
                        implementationClass="com.intellij.idea.plugin.hybris.impex.formatting.ImpexFormattingModelBuilder"/>

        <codeStyleSettingsProvider implementation="com.intellij.idea.plugin.hybris.impex.formatting.ImpexCodeStyleSettingsProvider"/>

        <langCodeStyleSettingsProvider implementation="com.intellij.idea.plugin.hybris.impex.formatting.ImpexLanguageCodeStyleSettingsProvider"/>

        <lang.foldingBuilder language="Impex"
                             implementationClass="com.intellij.idea.plugin.hybris.impex.folding.ImpexFoldingBuilder"/>

        <applicationConfigurable id="ImpexPlugin.ImpexConfigurable" parentId="root"
                                 instance="com.intellij.idea.plugin.hybris.settings.HybrisSettingsConfigurable"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.assistance.ImpexHeaderNameHighlighterService"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.assistance.DefaultImpexHeaderNameHighlighterService"/>

        <completion.contributor language="Impex"
                                implementationClass="com.intellij.idea.plugin.hybris.impex.completion.ImpexCompletionContributor"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.folding.simple.DefaultImpexFoldingPlaceholderBuilder"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.folding.simple.DefaultImpexFoldingPlaceholderBuilder"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.folding.smart.SmartImpexFoldingPlaceholderBuilder"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.folding.smart.SmartImpexFoldingPlaceholderBuilder"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.folding.simple.DefaultFoldingBlocksFilter"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.folding.simple.DefaultFoldingBlocksFilter"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.folding.smart.SmartFoldingBlocksFilter"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.folding.smart.SmartFoldingBlocksFilter"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.formatting.AlignmentStrategy"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.formatting.ColumnsAlignmentStrategy"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.highlighting.ImpexSyntaxHighlighter"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.highlighting.DefaultImpexSyntaxHighlighter"/>

        <!-- ####################################################################################################### -->
        <!--                                        Impex Completion Providers                                       -->
        <!-- ####################################################################################################### -->

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderTypeModifierNameCompletionProvider"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderTypeModifierNameCompletionProvider"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderAttributeModifierNameCompletionProvider"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderAttributeModifierNameCompletionProvider"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderTypeModifierValueCompletionProvider"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderTypeModifierValueCompletionProvider"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderAttributeModifierValueCompletionProvider"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderAttributeModifierValueCompletionProvider"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderItemTypeCodeCompletionProvider"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderItemTypeCodeCompletionProvider"/>

        <applicationService serviceInterface="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderItemTypeAttributeNameCompletionProvider"
                            serviceImplementation="com.intellij.idea.plugin.hybris.impex.completion.provider.ImpexHeaderItemTypeAttributeNameCompletionProvider"/>

        <!-- ####################################################################################################### -->

    </extensions>

    <application-components>
        <component>
            <implementation-class>
                com.intellij.idea.plugin.hybris.impex.assistance.ImpexHeaderHighlighterComponent
            </implementation-class>
        </component>
    </application-components>

    <actions>
        <action id="ImpexPlugin.IndexHybrisItemTypes"
                class="com.intellij.idea.plugin.hybris.indexer.IndexItemTypesAction"
                text="Index [y]-types"
                description="Run index-recreation of [y]-types (only works after ItemModel was being created!)">
            <add-to-group group-id="ToolsMenu" anchor="last"/>
        </action>
    </actions>

</idea-plugin>
